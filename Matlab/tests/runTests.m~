classdef runTests < matlab.unittest.TestCase
    % SolverTest tests solutions to the quadratic equation
    % a*x^2 + b*x + c = 0
    
    methods (Test)
        
        function testParams(~)
            p = model_params();
            testCase.assert(isa(p, 'struct'))
        end

        function testImaginarySolution(testCase)
            actSolution = quadraticSolver(1,2,10);
            expSolution = [-1+3i, -1-3i];
            testCase.verifyEqual(actSolution,expSolution);
        end
    end
    
end 




% function tests = runTests
% %% 
% tests = functiontests(localfunctions);
% 
% 
% end
% 
% 
% function testA(testCase)
%     verifyEqual(testCase,5,5)
% end


% %% Test size
% exp = [7 13];
% act = ones([7 13]);
% assert(isequal(size(act),exp))
% 
% %% Test values
% act = ones(42);
% assert(unique(act) == 1)
% 
% %% Test double class
% exp = 'double';
% act = ones;
% assert(isa(act,exp))
% 
% %% Test single class
% exp = 'single';
% act = ones('single');
% assert(isa(act,exp))
% 
% %% Test uint16 class
% exp = 'uint16';
% act = ones('uint16');
% assert(isa(act,exp))

